<Window x:Class="MCRLogManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:convert="clr-namespace:MCRLogManager.Converter"
        xmlns:local="clr-namespace:MCRLogManager" d:DataContext="{d:DesignInstance Type=local:ViewModel}"
        mc:Ignorable="d"
        Title="MCRLogManeger" SizeToContent="Width">
    <Window.Resources>
        <Style TargetType="Button" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF838383"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF797979"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFE0E0E0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF5D5D5D"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFD7D7D7"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF565656"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFB1B1B1"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Panel"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1,1,1,0" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Contentsite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Panel" Property="Background" Value="Black"/>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="Black"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--データグリッドの左上の全選択ボタンの設定-->
        <Style x:Key="DataGridAllSelectStyle" TargetType="Button">
            <Setter Property="Background" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Background" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--データグリッドスタイル設定-->
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="#FF688CAF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ScrollViewer Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                                    Focusable="false"  
                                                    Style="{StaticResource DataGridAllSelectStyle}"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <!--
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                    -->
                                            <DataGridColumnHeadersPresenter Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
                                            <ScrollBar Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                            <Grid Grid.Column="1" Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <!--データグリッドスタイル設定ここまで-->
        <BooleanToVisibilityConverter x:Key="BoolToVisible"/>
        <convert:VisibilityToBoolConverter x:Key="VisibleToBool"/>
        <convert:HalfDoubleConverter x:Key="HalfDouble"/>
    </Window.Resources>

    <DockPanel x:Name="MainMLM">
        <StackPanel Name="Status" Background="Black" DockPanel.Dock="Top" Orientation="Horizontal" Panel.ZIndex="3">
            <TextBlock Foreground="White" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" FontFamily="{StaticResource GSGMonospace-Medium}" Margin="0">
                Scale(<Run Text="{Binding Xscale}"/>:<Run Text="{Binding Yscale}"/>) GraphOriginRow:<Run Text="{Binding GraphOrigin}"/> SelectingRow:<Run Text="{Binding SelectedIndex,ElementName=DataGridView}"/> Point:
            </TextBlock>
            <TextBlock Text="X=    ,Y=    " Name="CanvasPoint" Foreground="White" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" FontFamily="{StaticResource GSGMonospace-Medium}"/>
        </StackPanel>

        <TextBlock Text="filename" Name="FileName" Background="Black" Foreground="White" DockPanel.Dock="Bottom" Panel.ZIndex="3" TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" FontFamily="{StaticResource GSGMonospace-Medium}"/>

        <Border DockPanel.Dock="Right" BorderBrush="Gray" Panel.ZIndex="2">
            <DockPanel Width="125" VerticalAlignment="Stretch" Background="LightGray">
                <Button Content="File Open" Click="OpenFile" DockPanel.Dock="Top"/>

                <Grid x:Name="AdvancedSet" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <TabControl Grid.Row="0" BorderThickness="0" Background="Black" Foreground="White">
                        <TabItem Header="グラフ管理">
                            <ListBox x:Name="LBox" SelectionMode="Multiple" SelectionChanged="LBoxButton" ItemsSource="{Binding Source={x:Static local:Global.Graph}}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType ="ListBoxItem">
                                        <Setter Property="IsSelected" Value="{Binding Path=Path.Visibility, Mode=OneWayToSource, Converter={StaticResource VisibleToBool}}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="Background" Value="#222222"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" MouseRightButtonDown="LBoxRightMouseDown"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </TabItem>
                        <TabItem Header="検索">
                            <DockPanel Background="LightGray">
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock DockPanel.Dock="Left" Text="対象" Foreground="Black"/>
                                    <ComboBox Name="SearchList" DisplayMemberPath="Name" ItemsSource="{Binding Source={x:Static local:Global.Graph}}"/>
                                </DockPanel>
                                <DockPanel DockPanel.Dock="Top">
                                    <TextBlock DockPanel.Dock="Left" Text="条件" Foreground="Black"/>
                                    <ComboBox Name="ConditionBox" DockPanel.Dock="Right">
                                        <ComboBoxItem IsSelected="True">以上</ComboBoxItem>
                                        <ComboBoxItem>以下</ComboBoxItem>
                                        <ComboBoxItem>同値</ComboBoxItem>
                                    </ComboBox>
                                    <TextBox Name="ConditionValue" PreviewTextInput="TextPreviewTextInpt"/>
                                </DockPanel>
                                <Button Content="検索" Click="SearchClick" DockPanel.Dock="Top"/>
                                <CheckBox Content="グラフに反映" Click="Write_Graph_Background" IsThreeState="True" IsChecked="{Binding IsGraphBack}" DockPanel.Dock="Bottom">
                                    <CheckBox.Style>
                                        <Style TargetType="CheckBox">
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="ToolTipService.IsEnabled" Value="true"/>
                                                    <Setter Property="ToolTipService.ToolTip" Value="現在の表示位置範囲にのみ表示します&#xa;移動で解除"/>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="{x:Null}">
                                                    <Setter Property="ToolTipService.IsEnabled" Value="true"/>
                                                    <Setter Property="ToolTipService.ToolTip" Value="現在の表示位置範囲にのみ表示します&#xa;常時表示"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </CheckBox.Style>
                                </CheckBox>
                                <CheckBox Content="表に反映" x:Name="GraphBackCheck" Click="Create_Grid_Background" DockPanel.Dock="Bottom"></CheckBox>
                                <Button Content="詳細検索と設定" Click="Button_Click" DockPanel.Dock="Top"/>
                                <ListBox Name="ResultList" ScrollViewer.VerticalScrollBarVisibility="Auto" SelectionChanged="ResultList_Selected">
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType ="ListBoxItem">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border Background="{TemplateBinding Background}">
                                                            <ContentPresenter/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Background" Value="#222222"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </DockPanel>
                        </TabItem>
                    </TabControl>
                    <StackPanel Grid.Row="1" Background="LightGray">
                        <CheckBox Name="CheckBox" Content="グラフから行を選択" IsChecked="True"/>
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="X:"/>
                            <TextBox Grid.Column="1" x:Name="sXbox" Text="{Binding Xscale,UpdateSourceTrigger=LostFocus}" PreviewTextInput="TextPreviewTextInpt" CommandManager.PreviewExecuted="TextPreviewExexuted" LostFocus="ScaleChange"/>
                            <TextBlock Grid.Column="2" Text="Y:"/>
                            <TextBox Grid.Column="3" x:Name="sYbox" Text="{Binding Yscale,UpdateSourceTrigger=LostFocus}" PreviewTextInput="TextPreviewTextInpt" CommandManager.PreviewExecuted="TextPreviewExexuted" LostFocus="ScaleChange"/>
                            <TextBlock Grid.Column="4" Text="倍表示"/>
                        </Grid>
                        <Button Content="Graph Clear" Click="Reset"/>
                    </StackPanel>

                </Grid>

            </DockPanel>
        </Border>
        <DockPanel Panel.ZIndex="1">
            <Grid Name="MainScrollViewer" DockPanel.Dock="Bottom" SizeChanged="ViewerSizeChanged" Background="Black">
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*"/>
                    <RowDefinition Height="4*"/>
                </Grid.RowDefinitions>
                <DockPanel Name="CanvasBox" Grid.Row="0">
                    <DockPanel DockPanel.Dock="Bottom" Name="ControlButtonBox" Panel.ZIndex="3">
                        <Button Content="&lt;&lt;" Click="CanvasStartMove" DockPanel.Dock="Left" />
                        <Button Content="&lt;" Click="CanvasLeftMove" DockPanel.Dock="Left"/>
                        <Button Content="&gt;&gt;" Click="CanvasEndMove" DockPanel.Dock="Right"/>
                        <Button Content="&gt;" Click="CanvasRightMove" DockPanel.Dock="Right"/>
                        <Button Content="選択行" Click="CanvasSelectMove"/>
                    </DockPanel>
                    <Canvas Name="LineGraphCanvas" MouseDown="CanvasMouseDown" MouseWheel="CanvasMouseWheel" Background="White" Grid.Row="0" Height="300" MouseMove="CanvasMouseMove">
                        <Line x:Name="Xaxis" Stroke="DimGray" X1="0" X2="{Binding ActualWidth,RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas}}" Y1="0" Y2="{Binding Y1, RelativeSource={RelativeSource Self}}" StrokeThickness="1" Panel.ZIndex="3" Canvas.Left="0" Canvas.Top="{Binding ActualHeight,RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas}, Mode=OneWay, Converter={StaticResource HalfDouble}}"/>
                        <Line x:Name="Yline" Stroke="#111111" X1="0" X2="{Binding X1,RelativeSource={RelativeSource Self}}" Y1="0" Y2="{Binding ActualHeight,RelativeSource={RelativeSource FindAncestor, AncestorType=Canvas}}" StrokeThickness="0.5" Panel.ZIndex="3" Canvas.Left="0"/>
                    </Canvas>
                </DockPanel>
                <DataGrid x:Name="DataGridView" ItemsSource="{Binding}" Height="200" 
                          AutoGeneratingColumn="DataGridView_AutoGeneratingColumn" AutoGenerateColumns="True"
                          CanUserSortColumns="False" CanUserDeleteRows="False" CanUserAddRows="False"  IsReadOnly="True"
                          Grid.Row="3" Style="{DynamicResource DataGridStyle1}"
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                          SelectedCellsChanged="DataGridView_SelectedCellsChanged">
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="TextBlock.TextAlignment" Value="Right"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="Silver"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Background" Value="Silver"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                        <Condition Binding="{Binding IsAnswering}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="{Binding ElementName=MainMLM, Path=DataContext.GridBack, Mode=OneWay}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="#222222"/>
                                    <Setter Property="Background" Value="#222222"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAnswering}" Value="True">
                                    <Setter Property="Background" Value="{Binding ElementName=MainMLM, Path=DataContext.GridBack, Mode=OneWay}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0.5"/>
                            <Setter Property="BorderBrush" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Padding" Value="1.5"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Content" Value="{Binding RowIndex}"/>
                            <Setter Property="Background" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0.5"/>
                            <Setter Property="BorderBrush" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Width" Value="50"/>
                        </Style>
                    </DataGrid.RowHeaderStyle>
                </DataGrid>
            </Grid>
        </DockPanel>
    </DockPanel>
</Window>
